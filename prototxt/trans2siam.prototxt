layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param {
    shape {
      dim: 1
      dim: 6
      dim: 128
      dim: 128
    }
  }
}
layer {
  name: "slice"
  type: "Slice"
  bottom: "data"
  top: "slice"
  top: "slice_p"
  slice_param {
    slice_point: 3
    axis: 1
  }
}
layer {
  name: "conv1_n"
  type: "Convolution"
  bottom: "slice"
  top: "conv1_n"
  param {
    name: "conv1_n_w"
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 3
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1_n"
  top: "conv1_n"
}
layer {
  name: "conv2_1/dw"
  type: "ConvolutionDepthwise"
  bottom: "conv1_n"
  top: "conv2_1/dw"
  param {
    name: "conv2_1/dw_w"
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu2_1/dw"
  type: "ReLU"
  bottom: "conv2_1/dw"
  top: "conv2_1/dw"
}
layer {
  name: "conv2_1/sep"
  type: "Convolution"
  bottom: "conv2_1/dw"
  top: "conv2_1/sep"
  param {
    name: "conv2_1/sep_w"
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_1/sep"
  type: "ReLU"
  bottom: "conv2_1/sep"
  top: "conv2_1/sep"
}
layer {
  name: "conv2_2/dw"
  type: "ConvolutionDepthwise"
  bottom: "conv2_1/sep"
  top: "conv2_2/dw"
  param {
    name: "conv2_2/dw_w"
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu2_2/dw"
  type: "ReLU"
  bottom: "conv2_2/dw"
  top: "conv2_2/dw"
}
layer {
  name: "conv2_2/sep"
  type: "Convolution"
  bottom: "conv2_2/dw"
  top: "conv2_2/sep"
  param {
    name: "conv2_2/sep_w"
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_2/sep"
  type: "ReLU"
  bottom: "conv2_2/sep"
  top: "conv2_2/sep"
}
layer {
  name: "conv3_1/dw"
  type: "ConvolutionDepthwise"
  bottom: "conv2_2/sep"
  top: "conv3_1/dw"
  param {
    name: "conv3_1/dw_w"
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu3_1/dw"
  type: "ReLU"
  bottom: "conv3_1/dw"
  top: "conv3_1/dw"
}
layer {
  name: "conv3_1/sep"
  type: "Convolution"
  bottom: "conv3_1/dw"
  top: "conv3_1/sep"
  param {
    name: "conv3_1/sep_w"
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_1/sep"
  type: "ReLU"
  bottom: "conv3_1/sep"
  top: "conv3_1/sep"
}
layer {
  name: "conv3_2/dw"
  type: "ConvolutionDepthwise"
  bottom: "conv3_1/sep"
  top: "conv3_2/dw"
  param {
    name: "conv3_2/dw_w"
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu3_2/dw"
  type: "ReLU"
  bottom: "conv3_2/dw"
  top: "conv3_2/dw"
}
layer {
  name: "conv3_2/sep"
  type: "Convolution"
  bottom: "conv3_2/dw"
  top: "conv3_2/sep"
  param {
    name: "conv3_2/sep_w"
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_2/sep"
  type: "ReLU"
  bottom: "conv3_2/sep"
  top: "conv3_2/sep"
}
layer {
  name: "conv4_1/dw"
  type: "ConvolutionDepthwise"
  bottom: "conv3_2/sep"
  top: "conv4_1/dw"
  param {
    name: "conv4_1/dw_w"
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 2
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "relu4_1/dw"
  type: "ReLU"
  bottom: "conv4_1/dw"
  top: "conv4_1/dw"
}
layer {
  name: "conv4_1/sep"
  type: "Convolution"
  bottom: "conv4_1/dw"
  top: "conv4_1/sep"
  param {
    name: "conv4_1/sep_w"
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4_1/sep"
  type: "ReLU"
  bottom: "conv4_1/sep"
  top: "conv4_1/sep"
}
layer {
  name: "conv4_2/dw"
  type: "ConvolutionDepthwise"
  bottom: "conv4_1/sep"
  top: "conv4_2/dw"
  param {
    name: "conv4_2/dw_w"
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 3
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 3
  }
}
layer {
  name: "relu4_2/dw"
  type: "ReLU"
  bottom: "conv4_2/dw"
  top: "conv4_2/dw"
}
layer {
  name: "conv4_2/sep"
  type: "Convolution"
  bottom: "conv4_2/dw"
  top: "conv4_2/sep"
  param {
    name: "conv4_2/sep_w"
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4_2/sep"
  type: "ReLU"
  bottom: "conv4_2/sep"
  top: "conv4_2/sep"
}
layer {
  name: "conv5_1/dw"
  type: "ConvolutionDepthwise"
  bottom: "conv4_2/sep"
  top: "conv5_1/dw"
  param {
    name: "conv5_1/dw_w"
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 3
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 3
  }
}
layer {
  name: "relu5_1/dw"
  type: "ReLU"
  bottom: "conv5_1/dw"
  top: "conv5_1/dw"
}
layer {
  name: "conv5_1/sep"
  type: "Convolution"
  bottom: "conv5_1/dw"
  top: "conv5_1/sep"
  param {
    name: "conv5_1/sep_w"
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5_1/sep"
  type: "ReLU"
  bottom: "conv5_1/sep"
  top: "conv5_1/sep"
}
layer {
  name: "conv5_2/dw"
  type: "ConvolutionDepthwise"
  bottom: "conv5_1/sep"
  top: "conv5_2/dw"
  param {
    name: "conv5_2/dw_w"
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "relu5_2/dw"
  type: "ReLU"
  bottom: "conv5_2/dw"
  top: "conv5_2/dw"
}
layer {
  name: "conv5_2/sep"
  type: "Convolution"
  bottom: "conv5_2/dw"
  top: "conv5_2/sep"
  param {
    name: "conv5_2/sep_w"
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5_2/sep"
  type: "ReLU"
  bottom: "conv5_2/sep"
  top: "conv5_2/sep"
}
layer {
  name: "conv5_3/dw"
  type: "ConvolutionDepthwise"
  bottom: "conv5_2/sep"
  top: "conv5_3/dw"
  param {
    name: "conv5_3/dw_w"
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu5_3/dw"
  type: "ReLU"
  bottom: "conv5_3/dw"
  top: "conv5_3/dw"
}
layer {
  name: "conv5_3/sep"
  type: "Convolution"
  bottom: "conv5_3/dw"
  top: "conv5_3/sep"
  param {
    name: "conv5_3/sep_w"
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5_3/sep"
  type: "ReLU"
  bottom: "conv5_3/sep"
  top: "conv5_3/sep"
}
layer {
  name: "conv1_n_p"
  type: "Convolution"
  bottom: "slice_p"
  top: "conv1_n_p"
  param {
    name: "conv1_n_w"
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 3
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu1_p"
  type: "ReLU"
  bottom: "conv1_n_p"
  top: "conv1_n_p"
}
layer {
  name: "conv2_1/dw_p"
  type: "ConvolutionDepthwise"
  bottom: "conv1_n_p"
  top: "conv2_1/dw_p"
  param {
    name: "conv2_1/dw_w"
  }
  convolution_param {
    num_output: 32
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu2_1/dw_p"
  type: "ReLU"
  bottom: "conv2_1/dw_p"
  top: "conv2_1/dw_p"
}
layer {
  name: "conv2_1/sep_p"
  type: "Convolution"
  bottom: "conv2_1/dw_p"
  top: "conv2_1/sep_p"
  param {
    name: "conv2_1/sep_w"
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_1/sep_p"
  type: "ReLU"
  bottom: "conv2_1/sep_p"
  top: "conv2_1/sep_p"
}
layer {
  name: "conv2_2/dw_p"
  type: "ConvolutionDepthwise"
  bottom: "conv2_1/sep_p"
  top: "conv2_2/dw_p"
  param {
    name: "conv2_2/dw_w"
  }
  convolution_param {
    num_output: 64
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu2_2/dw_p"
  type: "ReLU"
  bottom: "conv2_2/dw_p"
  top: "conv2_2/dw_p"
}
layer {
  name: "conv2_2/sep_p"
  type: "Convolution"
  bottom: "conv2_2/dw_p"
  top: "conv2_2/sep_p"
  param {
    name: "conv2_2/sep_w"
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_2/sep_p"
  type: "ReLU"
  bottom: "conv2_2/sep_p"
  top: "conv2_2/sep_p"
}
layer {
  name: "conv3_1/dw_p"
  type: "ConvolutionDepthwise"
  bottom: "conv2_2/sep_p"
  top: "conv3_1/dw_p"
  param {
    name: "conv3_1/dw_w"
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu3_1/dw_p"
  type: "ReLU"
  bottom: "conv3_1/dw_p"
  top: "conv3_1/dw_p"
}
layer {
  name: "conv3_1/sep_p"
  type: "Convolution"
  bottom: "conv3_1/dw_p"
  top: "conv3_1/sep_p"
  param {
    name: "conv3_1/sep_w"
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_1/sep_p"
  type: "ReLU"
  bottom: "conv3_1/sep_p"
  top: "conv3_1/sep_p"
}
layer {
  name: "conv3_2/dw_p"
  type: "ConvolutionDepthwise"
  bottom: "conv3_1/sep_p"
  top: "conv3_2/dw_p"
  param {
    name: "conv3_2/dw_w"
  }
  convolution_param {
    num_output: 128
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu3_2/dw_p"
  type: "ReLU"
  bottom: "conv3_2/dw_p"
  top: "conv3_2/dw_p"
}
layer {
  name: "conv3_2/sep_p"
  type: "Convolution"
  bottom: "conv3_2/dw_p"
  top: "conv3_2/sep_p"
  param {
    name: "conv3_2/sep_w"
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_2/sep_p"
  type: "ReLU"
  bottom: "conv3_2/sep_p"
  top: "conv3_2/sep_p"
}
layer {
  name: "conv4_1/dw_p"
  type: "ConvolutionDepthwise"
  bottom: "conv3_2/sep_p"
  top: "conv4_1/dw_p"
  param {
    name: "conv4_1/dw_w"
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 2
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "relu4_1/dw_p"
  type: "ReLU"
  bottom: "conv4_1/dw_p"
  top: "conv4_1/dw_p"
}
layer {
  name: "conv4_1/sep_p"
  type: "Convolution"
  bottom: "conv4_1/dw_p"
  top: "conv4_1/sep_p"
  param {
    name: "conv4_1/sep_w"
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4_1/sep_p"
  type: "ReLU"
  bottom: "conv4_1/sep_p"
  top: "conv4_1/sep_p"
}
layer {
  name: "conv4_2/dw_p"
  type: "ConvolutionDepthwise"
  bottom: "conv4_1/sep_p"
  top: "conv4_2/dw_p"
  param {
    name: "conv4_2/dw_w"
  }
  convolution_param {
    num_output: 256
    bias_term: true
    pad: 3
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 3
  }
}
layer {
  name: "relu4_2/dw_p"
  type: "ReLU"
  bottom: "conv4_2/dw_p"
  top: "conv4_2/dw_p"
}
layer {
  name: "conv4_2/sep_p"
  type: "Convolution"
  bottom: "conv4_2/dw_p"
  top: "conv4_2/sep_p"
  param {
    name: "conv4_2/sep_w"
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4_2/sep_p"
  type: "ReLU"
  bottom: "conv4_2/sep_p"
  top: "conv4_2/sep_p"
}
layer {
  name: "conv5_1/dw_p"
  type: "ConvolutionDepthwise"
  bottom: "conv4_2/sep_p"
  top: "conv5_1/dw_p"
  param {
    name: "conv5_1/dw_w"
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 3
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 3
  }
}
layer {
  name: "relu5_1/dw_p"
  type: "ReLU"
  bottom: "conv5_1/dw_p"
  top: "conv5_1/dw_p"
}
layer {
  name: "conv5_1/sep_p"
  type: "Convolution"
  bottom: "conv5_1/dw_p"
  top: "conv5_1/sep_p"
  param {
    name: "conv5_1/sep_w"
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5_1/sep_p"
  type: "ReLU"
  bottom: "conv5_1/sep_p"
  top: "conv5_1/sep_p"
}
layer {
  name: "conv5_2/dw_p"
  type: "ConvolutionDepthwise"
  bottom: "conv5_1/sep_p"
  top: "conv5_2/dw_p"
  param {
    name: "conv5_2/dw_w"
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 2
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 2
  }
}
layer {
  name: "relu5_2/dw_p"
  type: "ReLU"
  bottom: "conv5_2/dw_p"
  top: "conv5_2/dw_p"
}
layer {
  name: "conv5_2/sep_p"
  type: "Convolution"
  bottom: "conv5_2/dw_p"
  top: "conv5_2/sep_p"
  param {
    name: "conv5_2/sep_w"
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5_2/sep_p"
  type: "ReLU"
  bottom: "conv5_2/sep_p"
  top: "conv5_2/sep_p"
}
layer {
  name: "conv5_3/dw_p"
  type: "ConvolutionDepthwise"
  bottom: "conv5_2/sep_p"
  top: "conv5_3/dw_p"
  param {
    name: "conv5_3/dw_w"
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu5_3/dw_p"
  type: "ReLU"
  bottom: "conv5_3/dw_p"
  top: "conv5_3/dw_p"
}
layer {
  name: "conv5_3/sep_p"
  type: "Convolution"
  bottom: "conv5_3/dw_p"
  top: "conv5_3/sep_p"
  param {
    name: "conv5_3/sep_w"
  }
  convolution_param {
    num_output: 512
    bias_term: true
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5_3/sep_p"
  type: "ReLU"
  bottom: "conv5_3/sep_p"
  top: "conv5_3/sep_p"
}
layer {
  name: "eltwise"
  type: "Eltwise"
  bottom: "conv5_3/sep"
  bottom: "conv5_3/sep_p"
  top: "eltwise"
  eltwise_param {
    operation: SUM
    coeff: 1
    coeff: -1
  }
}
layer {
  name: "conv"
  type: "Convolution"
  bottom: "eltwise"
  top: "conv"
  convolution_param {
    num_output: 2
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "deconv1"
  type: "Deconvolution"
  bottom: "conv"
  top: "deconv1"
  convolution_param {
    num_output: 2
    bias_term: false
    pad: 0
    kernel_size: 2
    group: 2
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "conv11"
  type: "Convolution"
  bottom: "deconv1"
  top: "conv11"
  convolution_param {
    num_output: 2
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "deconv2"
  type: "Deconvolution"
  bottom: "conv11"
  top: "deconv2"
  convolution_param {
    num_output: 2
    bias_term: false
    pad: 0
    kernel_size: 2
    group: 2
    stride: 2
    weight_filler {
      type: "bilinear"
    }
  }
}
layer {
  name: "conv13"
  type: "Convolution"
  bottom: "deconv2"
  top: "conv13"
  convolution_param {
    num_output: 2
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "deconv"
  type: "Deconvolution"
  bottom: "conv13"
  top: "deconv"
  convolution_param {
    num_output: 2
    bias_term: false
    pad: 1
    kernel_size: 4
    group: 2
    stride: 2
    weight_filler {
      type: "bilinear"
    }
    engine: CAFFE
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "deconv"
  top: "prob"
}
layer {
  name: "output"
  type: "ArgMax"
  bottom: "prob"
  top: "output"
  argmax_param {
    axis: 1
  }
}
